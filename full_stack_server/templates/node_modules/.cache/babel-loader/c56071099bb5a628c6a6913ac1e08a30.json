{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ruochenliu/Desktop/volvo-social-media/src/views/AccountAnalytics.jsx\";\nimport React, { Component } from 'react';\nimport SummaryCard from '../components/SummaryCard.jsx';\nimport BarGraphCard from '../components/BarGraphCard.jsx';\nimport PieGraphCard from '../components/PieGraphCard.jsx';\nimport axios from 'axios';\nimport { Form } from 'react-bootstrap';\n\nclass AccountAnalytics extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getData();\n    };\n\n    this.getData = () => {\n      const url = \"https://easydoc.xyz/mock/CHs95kcg/api/account\";\n      axios.get(url).then(res => {\n        console.log(res.data);\n        this.setState({\n          data: res.data\n        });\n      }, error => console.log('An error occurred.', error));\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    var regions = [];\n\n    if (data && data.region_count_list) {\n      data.region_count_list.map(item => {\n        regions.push({\n          name: item[\"country_code\"],\n          value: item[\"percentage\"]\n        });\n      });\n    }\n\n    const selectMode = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mode-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Top Liked\",\n            name: \"top_like_twitters\",\n            value: \"top_like_twitters\",\n            className: \"mode-form-checkbox\",\n            checked: mode == \"top_like_twitters\",\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Top Retweeted\",\n            name: \"top_retweet_twitters\",\n            value: \"top_retweet_twitters\",\n            className: \"mode-form-checkbox\",\n            checked: mode == \"top_retweet_twitters\",\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Most Recent\",\n            name: \"recent_twitters\",\n            value: \"recent_twitters\",\n            className: \"mode-form-checkbox\",\n            checked: mode == \"recent_twitters\",\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [selectModel(), !data ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AA-container\",\n        children: [/*#__PURE__*/_jsxDEV(SummaryCard, {\n          summary: data.summary_resp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PieGraphCard, {\n          graphData: regions,\n          type: \"Follower Region Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarGraphCard, {\n          graphData: data.new_follower_count,\n          type: \"New Retweets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarGraphCard, {\n          graphData: data.new_comment_count,\n          type: \"New Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarGraphCard, {\n          graphData: data.new_like_count,\n          type: \"New Likes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarGraphCard, {\n          graphData: data.new_mention_count,\n          type: \"New Mentions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AccountAnalytics;","map":{"version":3,"sources":["/Users/ruochenliu/Desktop/volvo-social-media/src/views/AccountAnalytics.jsx"],"names":["React","Component","SummaryCard","BarGraphCard","PieGraphCard","axios","Form","AccountAnalytics","constructor","props","componentDidMount","getData","url","get","then","res","console","log","data","setState","error","state","render","regions","region_count_list","map","item","push","name","value","selectMode","mode","e","toggle","selectModel","summary_resp","new_follower_count","new_comment_count","new_like_count","new_mention_count"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SummaryCard from '../components/SummaryCard.jsx';\nimport BarGraphCard from '../components/BarGraphCard.jsx';\nimport PieGraphCard from '../components/PieGraphCard.jsx';\nimport axios from 'axios';\nimport { Form } from 'react-bootstrap';\n\n\nclass AccountAnalytics extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  componentDidMount = () => {\n    this.getData();\n  }\n\n  getData = () => {\n    const url = \"https://easydoc.xyz/mock/CHs95kcg/api/account\";\n    axios.get(url)\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          data: res.data\n        })\n      },\n      error => console.log('An error occurred.', error),\n    );\n  }\n\n  render() {\n\n    const { data } = this.state;\n    var regions = []\n    if (data && data.region_count_list) {\n      data.region_count_list.map(item => {\n        regions.push({\n          name: item[\"country_code\"],\n          value: item[\"percentage\"]\n        })\n      })\n    }\n\n    const selectMode = () => {\n      return (\n        <div className=\"mode-form\">\n        <Form >\n          <Form.Check\n            type=\"radio\"\n            label=\"Top Liked\"\n            name=\"top_like_twitters\"\n            value=\"top_like_twitters\"\n            className=\"mode-form-checkbox\"\n            checked={mode == \"top_like_twitters\"}\n            onChange={e => this.toggle(e)}\n          />\n          <Form.Check\n            type=\"radio\"\n            label=\"Top Retweeted\"\n            name=\"top_retweet_twitters\"\n            value=\"top_retweet_twitters\"\n            className=\"mode-form-checkbox\"\n            checked={mode == \"top_retweet_twitters\"}\n            onChange={e => this.toggle(e)}\n          />\n          <Form.Check\n            type=\"radio\"\n            label=\"Most Recent\"\n            name=\"recent_twitters\"\n            value=\"recent_twitters\"\n            className=\"mode-form-checkbox\"\n            checked={mode == \"recent_twitters\"}\n            onChange={e => this.toggle(e)}\n          />\n        </Form>\n        </div>\n      )\n    }\n\n\n    return (\n      <div>\n        {selectModel()}\n        {!data ? null :\n        <div className=\"AA-container\">\n          <SummaryCard summary={data.summary_resp}/>\n          <PieGraphCard graphData={regions} type=\"Follower Region Distribution\"/>\n          <BarGraphCard graphData={data.new_follower_count} type=\"New Retweets\"/>\n          <BarGraphCard graphData={data.new_comment_count} type=\"New Comments\"/>\n          <BarGraphCard graphData={data.new_like_count} type=\"New Likes\"/>\n          <BarGraphCard graphData={data.new_mention_count} type=\"New Mentions\"/>\n        </div> }\n      </div>\n\n    )\n  }\n}\n\n\nexport default AccountAnalytics;\n"]},"metadata":{},"sourceType":"module"}