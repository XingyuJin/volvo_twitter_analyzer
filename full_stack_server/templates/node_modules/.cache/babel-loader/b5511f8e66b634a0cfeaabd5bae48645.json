{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ruochenliu/Desktop/volvo-social-media/src/components/AreaGraphCard.jsx\";\nimport React, { Component } from 'react';\nimport '../assets/css/Dashboard.css';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Label } from 'recharts';\nimport { Form } from 'react-bootstrap';\n\nclass AreaGraphCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = event => {\n      const {\n        selectedModel\n      } = this.state;\n      const target = event.target;\n      const checked = target.checked;\n      const name = target.name;\n      console.log(e);\n    };\n\n    this.state = {\n      selectedModel: [\"xc90\"]\n    };\n  }\n\n  render() {\n    const {\n      graphData,\n      type,\n      isModel\n    } = this.props;\n    const {\n      selectedModel\n    } = this.state;\n\n    const selectModel = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            id: \"checkbox\",\n            label: \"s60\",\n            className: \"model-form-checkbox\",\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            id: \"checkbox\",\n            label: \"xc90\",\n            className: \"model-form-checkbox\",\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            id: \"checkbox\",\n            label: \"xc40\",\n            className: \"model-form-checkbox\",\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    };\n\n    console.log(graphData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-big-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title\",\n        children: [type, selectModel()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: 310,\n        height: \"75%\",\n        className: \"area-chart-container\",\n        children: /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: graphData,\n          margin: {\n            top: 5,\n            bottom: 5,\n            left: -30\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"xc90\",\n            stroke: \"#A6CEE3\",\n            fill: \"#A6CEE3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"s60\",\n            stroke: \"#A7E1AD\",\n            fill: \"#A7E1AD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n} //\n// {selectedModel.map(item => {\n//   console.log(item);\n//   <Area dataKey={item} fill=\"#A6CEE3\" />\n// })}\n\n\nexport default AreaGraphCard;","map":{"version":3,"sources":["/Users/ruochenliu/Desktop/volvo-social-media/src/components/AreaGraphCard.jsx"],"names":["React","Component","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Label","Form","AreaGraphCard","constructor","props","toggle","event","selectedModel","state","target","checked","name","console","log","e","render","graphData","type","isModel","selectModel","top","bottom","left"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../assets/css/Dashboard.css';\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Label,\n} from 'recharts';\nimport { Form } from 'react-bootstrap';\n\n\nclass AreaGraphCard extends Component {\n\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedModel: [\"xc90\"]\n    }\n  }\n\n  toggle = (event) => {\n    const { selectedModel } = this.state;\n    const target = event.target\n    const checked = target.checked\n    const name = target.name\n    console.log(e);\n\n  }\n\n  render() {\n\n    const { graphData, type, isModel } = this.props;\n    const { selectedModel } = this.state;\n\n    const selectModel = () => {\n      return (\n        <div className=\"model-form\">\n        <Form >\n          <Form.Check\n            type=\"checkbox\"\n            id=\"checkbox\"\n            label=\"s60\"\n            className=\"model-form-checkbox\"\n            onChange={e => this.toggle(e)}\n          />\n          <Form.Check\n            type=\"checkbox\"\n            id=\"checkbox\"\n            label=\"xc90\"\n            className=\"model-form-checkbox\"\n            onChange={e => this.toggle(e)}\n          />\n          <Form.Check\n            type=\"checkbox\"\n            id=\"checkbox\"\n            label=\"xc40\"\n            className=\"model-form-checkbox\"\n            onChange={e => this.toggle(e)}\n          />\n        </Form>\n        </div>\n      )\n    }\n    console.log(graphData);\n\n    return (\n      <div className=\"card-big-container\">\n        <div className=\"card-title\">\n          {type}\n          {selectModel()}\n        </div>\n        <ResponsiveContainer width={310} height=\"75%\" className=\"area-chart-container\">\n          <AreaChart data={graphData} margin={{top: 5, bottom: 5, left: -30}}>\n           <XAxis dataKey=\"key\"/>\n           <YAxis/>\n           <Tooltip/>\n           <Area type='monotone' dataKey=\"xc90\" stroke=\"#A6CEE3\" fill=\"#A6CEE3\" />\n           <Area type='monotone' dataKey=\"s60\" stroke=\"#A7E1AD\" fill=\"#A7E1AD\" />\n          </AreaChart>\n        </ResponsiveContainer>\n\n      </div>\n    )\n\n  }\n\n}\n//\n// {selectedModel.map(item => {\n//   console.log(item);\n//   <Area dataKey={item} fill=\"#A6CEE3\" />\n// })}\n\nexport default AreaGraphCard;\n"]},"metadata":{},"sourceType":"module"}