{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ruochenliu/Desktop/volvo-social-media/src/views/MentionStatistics.jsx\";\nimport React, { Component } from 'react';\nimport BarGraphCard from '../components/BarGraphCard.jsx';\nimport PieGraphCard from '../components/PieGraphCard.jsx';\nimport LineGraphCard from '../components/LineGraphCard.jsx';\nimport TweetsCard from '../components/TweetsCard.jsx';\nimport WordCloudCard from '../components/WordCloudCard.jsx';\nimport axios from 'axios';\n\nclass MentionStatistics extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getData();\n    };\n\n    this.getData = () => {\n      const url = \"https://easydoc.xyz/mock/CHs95kcg/api/mention\";\n      axios.get(url).then(res => {\n        console.log(res.data);\n        this.setState({\n          data: res.data\n        });\n      }, error => console.log('An error occurred.', error));\n    };\n\n    this.state = {\n      data: {}\n    };\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    const {\n      score_dist\n    } = data.score_dist;\n    const scores = [{\n      name: \"positive\",\n      value: score_dist[\"positive\"]\n    }, {\n      name: \"negative\",\n      value: score_dist[\"negative\"]\n    }, {\n      name: \"neutral\",\n      value: score_dist[\"neutral\"]\n    }];\n    const tmp_avg_scores = [{\n      time: 'Jun',\n      score: 100\n    }, {\n      time: 'Jul',\n      score: 200\n    }, {\n      time: 'Aug',\n      score: 300\n    }, {\n      time: 'Sep',\n      score: 200\n    }, {\n      time: 'Oct',\n      score: 400\n    }, {\n      time: 'Nov',\n      score: 100\n    }, {\n      time: 'Dec',\n      score: 200\n    }];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !data ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AA-container\",\n        children: [/*#__PURE__*/_jsxDEV(BarGraphCard, {\n          graphData: data.model_score_list,\n          type: \"Sentiment Score for Models\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PieGraphCard, {\n          graphData: scores,\n          type: \"Sentiment Scores Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineGraphCard, {\n          graphData: tmp_avg_scores,\n          type: \"Sentiment Scores over Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TweetsCard, {\n          tweets: data.top_twitters,\n          type: \"Latest Mentions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WordCloudCard, {\n          words: data.word_cloud,\n          type: \"Word Cloud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MentionStatistics;","map":{"version":3,"sources":["/Users/ruochenliu/Desktop/volvo-social-media/src/views/MentionStatistics.jsx"],"names":["React","Component","BarGraphCard","PieGraphCard","LineGraphCard","TweetsCard","WordCloudCard","axios","MentionStatistics","constructor","props","componentDidMount","getData","url","get","then","res","console","log","data","setState","error","state","render","score_dist","scores","name","value","tmp_avg_scores","time","score","model_score_list","top_twitters","word_cloud"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport BarGraphCard from '../components/BarGraphCard.jsx';\nimport PieGraphCard from '../components/PieGraphCard.jsx';\nimport LineGraphCard from '../components/LineGraphCard.jsx';\nimport TweetsCard from '../components/TweetsCard.jsx';\nimport WordCloudCard from '../components/WordCloudCard.jsx';\nimport axios from 'axios';\n\n\nclass MentionStatistics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n\n      }\n    }\n  };\n\n  componentDidMount = () => {\n    this.getData();\n  }\n\n  getData = () => {\n    const url = \"https://easydoc.xyz/mock/CHs95kcg/api/mention\";\n    axios.get(url)\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          data: res.data\n        })\n      },\n      error => console.log('An error occurred.', error),\n    );\n  }\n\n  render() {\n    const { data } = this.state;\n    const { score_dist } = data.score_dist;\n    const scores = [\n      {name: \"positive\", value: score_dist[\"positive\"]},\n      {name: \"negative\", value: score_dist[\"negative\"]},\n      {name: \"neutral\", value: score_dist[\"neutral\"]},\n    ]\n\n    const tmp_avg_scores = [\n      {time: 'Jun', score: 100},\n      {time: 'Jul', score: 200},\n      {time: 'Aug', score: 300},\n      {time: 'Sep', score: 200},\n      {time: 'Oct', score: 400},\n      {time: 'Nov', score: 100},\n      {time: 'Dec', score: 200},\n    ];\n\n    return (\n      <div>\n        {!data ? null :\n        <div className=\"AA-container\">\n          <BarGraphCard graphData={data.model_score_list} type=\"Sentiment Score for Models\"/>\n          <PieGraphCard graphData={scores} type=\"Sentiment Scores Distribution\"/>\n          <LineGraphCard graphData={tmp_avg_scores} type=\"Sentiment Scores over Time\"/>\n          <TweetsCard tweets={data.top_twitters} type=\"Latest Mentions\" />\n          <WordCloudCard words={data.word_cloud} type=\"Word Cloud\"/>\n        </div>}\n      </div>\n\n    )\n  }\n\n\n}\n\n\nexport default MentionStatistics;\n"]},"metadata":{},"sourceType":"module"}