{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\UCB\\\\courses\\\\2020Fall\\\\IEOR 135\\\\volvo_social_media\\\\full_stack_server\\\\templates\\\\src\\\\components\\\\AreaGraphCard.jsx\";\nimport React, { Component } from 'react';\nimport '../assets/css/Dashboard.css';\nimport { Area, AreaChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Form } from 'react-bootstrap';\n\nclass AreaGraphCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = event => {\n      var models = this.state.models;\n      const target = event.target;\n      const checked = target.checked;\n      const name = target.name;\n      models[name] = checked;\n      this.setState({\n        models: models\n      });\n    };\n\n    this.state = {\n      models: {\n        \"s60\": true,\n        \"xc90\": false,\n        \"xc40\": false\n      }\n    };\n  }\n\n  render() {\n    const {\n      graphData,\n      type,\n      isModel\n    } = this.props;\n    const {\n      models\n    } = this.state;\n\n    const selectModel = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            id: \"checkbox\",\n            label: \"s60\",\n            name: \"s60\",\n            className: \"model-form-checkbox\",\n            checked: models[\"s60\"],\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            id: \"checkbox\",\n            label: \"xc90\",\n            name: \"xc90\",\n            className: \"model-form-checkbox\",\n            checked: models[\"xc90\"],\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            id: \"checkbox\",\n            label: \"xc40\",\n            name: \"xc40\",\n            className: \"model-form-checkbox\",\n            checked: models[\"xc40\"],\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-big-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title\",\n        children: [type, selectModel()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: 310,\n        height: \"75%\",\n        className: \"area-chart-container\",\n        children: /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: graphData,\n          margin: {\n            top: 5,\n            bottom: 5,\n            left: -30\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"key\",\n            interval: 0,\n            padding: {\n              right: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), !models[\"s60\"] ? null : /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"s60\",\n            stroke: \"#A6CEE3\",\n            fill: \"#A6CEE3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 50\n          }, this), !models[\"xc90\"] ? null : /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"xc90\",\n            stroke: \"#A7E1AD\",\n            fill: \"#A7E1AD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), !models[\"xc40\"] ? null : /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"xc40\",\n            stroke: \"#D9CCDF\",\n            fill: \"#D9CCDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AreaGraphCard;","map":{"version":3,"sources":["E:/UCB/courses/2020Fall/IEOR 135/volvo_social_media/full_stack_server/templates/src/components/AreaGraphCard.jsx"],"names":["React","Component","Area","AreaChart","ResponsiveContainer","Tooltip","XAxis","YAxis","Form","AreaGraphCard","constructor","props","toggle","event","models","state","target","checked","name","setState","render","graphData","type","isModel","selectModel","e","top","bottom","left","right"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,6BAAP;AACA,SAAQC,IAAR,EAAcC,SAAd,EAAyBC,mBAAzB,EAA8CC,OAA9C,EAAuDC,KAAvD,EAA8DC,KAA9D,QAA2E,UAA3E;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAGA,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AAGlCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWnBC,MAXmB,GAWTC,KAAD,IAAW;AAChB,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAAxB;AACA,YAAME,MAAM,GAAGH,KAAK,CAACG,MAArB;AACA,YAAMC,OAAO,GAAGD,MAAM,CAACC,OAAvB;AACA,YAAMC,IAAI,GAAGF,MAAM,CAACE,IAApB;AACAJ,MAAAA,MAAM,CAACI,IAAD,CAAN,GAAeD,OAAf;AACA,WAAKE,QAAL,CAAc;AACVL,QAAAA,MAAM,EAAEA;AADE,OAAd;AAGH,KApBkB;;AAEf,SAAKC,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAE;AACJ,eAAO,IADH;AAEJ,gBAAQ,KAFJ;AAGJ,gBAAQ;AAHJ;AADC,KAAb;AAOH;;AAaDM,EAAAA,MAAM,GAAG;AAEL,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA;AAAlB,QAA6B,KAAKZ,KAAxC;AACA,UAAM;AAACG,MAAAA;AAAD,QAAW,KAAKC,KAAtB;;AAEA,UAAMS,WAAW,GAAG,MAAM;AACtB,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI,QAAC,IAAD;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,EAAE,EAAC,UAFP;AAGI,YAAA,KAAK,EAAC,KAHV;AAII,YAAA,IAAI,EAAC,KAJT;AAKI,YAAA,SAAS,EAAC,qBALd;AAMI,YAAA,OAAO,EAAEV,MAAM,CAAC,KAAD,CANnB;AAOI,YAAA,QAAQ,EAAEW,CAAC,IAAI,KAAKb,MAAL,CAAYa,CAAZ;AAPnB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,EAAE,EAAC,UAFP;AAGI,YAAA,KAAK,EAAC,MAHV;AAII,YAAA,IAAI,EAAC,MAJT;AAKI,YAAA,SAAS,EAAC,qBALd;AAMI,YAAA,OAAO,EAAEX,MAAM,CAAC,MAAD,CANnB;AAOI,YAAA,QAAQ,EAAEW,CAAC,IAAI,KAAKb,MAAL,CAAYa,CAAZ;AAPnB;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAmBI,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,IAAI,EAAC,UADT;AAEI,YAAA,EAAE,EAAC,UAFP;AAGI,YAAA,KAAK,EAAC,MAHV;AAII,YAAA,IAAI,EAAC,MAJT;AAKI,YAAA,SAAS,EAAC,qBALd;AAMI,YAAA,OAAO,EAAEX,MAAM,CAAC,MAAD,CANnB;AAOI,YAAA,QAAQ,EAAEW,CAAC,IAAI,KAAKb,MAAL,CAAYa,CAAZ;AAPnB;AAAA;AAAA;AAAA;AAAA,kBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAiCH,KAlCD;;AAoCA,wBACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,mBACKH,IADL,EAEKE,WAAW,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,mBAAD;AAAqB,QAAA,KAAK,EAAE,GAA5B;AAAiC,QAAA,MAAM,EAAC,KAAxC;AAA8C,QAAA,SAAS,EAAC,sBAAxD;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,IAAI,EAAEH,SAAjB;AAA4B,UAAA,MAAM,EAAE;AAACK,YAAAA,GAAG,EAAE,CAAN;AAASC,YAAAA,MAAM,EAAE,CAAjB;AAAoBC,YAAAA,IAAI,EAAE,CAAC;AAA3B,WAApC;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,OAAO,EAAC,KAAf;AAAqB,YAAA,QAAQ,EAAE,CAA/B;AAAkC,YAAA,OAAO,EAAE;AAACC,cAAAA,KAAK,EAAE;AAAR;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAIK,CAACf,MAAM,CAAC,KAAD,CAAP,GAAiB,IAAjB,gBAAwB,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,UAAX;AAAsB,YAAA,OAAO,EAAC,KAA9B;AAAoC,YAAA,MAAM,EAAC,SAA3C;AAAqD,YAAA,IAAI,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,kBAJ7B,EAKK,CAACA,MAAM,CAAC,MAAD,CAAP,GAAkB,IAAlB,gBACG,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,UAAX;AAAsB,YAAA,OAAO,EAAC,MAA9B;AAAqC,YAAA,MAAM,EAAC,SAA5C;AAAsD,YAAA,IAAI,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBANR,EAOK,CAACA,MAAM,CAAC,MAAD,CAAP,GAAkB,IAAlB,gBACG,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,UAAX;AAAsB,YAAA,OAAO,EAAC,MAA9B;AAAqC,YAAA,MAAM,EAAC,SAA5C;AAAsD,YAAA,IAAI,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,kBARR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH;;AAxFiC;;AA6FtC,eAAeL,aAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport '../assets/css/Dashboard.css';\r\nimport {Area, AreaChart, ResponsiveContainer, Tooltip, XAxis, YAxis,} from 'recharts';\r\nimport {Form} from 'react-bootstrap';\r\n\r\n\r\nclass AreaGraphCard extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            models: {\r\n                \"s60\": true,\r\n                \"xc90\": false,\r\n                \"xc40\": false\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle = (event) => {\r\n        var models = this.state.models;\r\n        const target = event.target\r\n        const checked = target.checked\r\n        const name = target.name\r\n        models[name] = checked;\r\n        this.setState({\r\n            models: models,\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {graphData, type, isModel} = this.props;\r\n        const {models} = this.state;\r\n\r\n        const selectModel = () => {\r\n            return (\r\n                <div className=\"model-form\">\r\n                    <Form>\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox\"\r\n                            label=\"s60\"\r\n                            name=\"s60\"\r\n                            className=\"model-form-checkbox\"\r\n                            checked={models[\"s60\"]}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox\"\r\n                            label=\"xc90\"\r\n                            name=\"xc90\"\r\n                            className=\"model-form-checkbox\"\r\n                            checked={models[\"xc90\"]}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox\"\r\n                            label=\"xc40\"\r\n                            name=\"xc40\"\r\n                            className=\"model-form-checkbox\"\r\n                            checked={models[\"xc40\"]}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"card-big-container\">\r\n                <div className=\"card-title\">\r\n                    {type}\r\n                    {selectModel()}\r\n                </div>\r\n                <ResponsiveContainer width={310} height=\"75%\" className=\"area-chart-container\">\r\n                    <AreaChart data={graphData} margin={{top: 5, bottom: 5, left: -30}}>\r\n                        <XAxis dataKey=\"key\" interval={0} padding={{right: 10}}/>\r\n                        <YAxis/>\r\n                        <Tooltip/>\r\n                        {!models[\"s60\"] ? null : <Area type='monotone' dataKey=\"s60\" stroke=\"#A6CEE3\" fill=\"#A6CEE3\"/>}\r\n                        {!models[\"xc90\"] ? null :\r\n                            <Area type='monotone' dataKey=\"xc90\" stroke=\"#A7E1AD\" fill=\"#A7E1AD\"/>}\r\n                        {!models[\"xc40\"] ? null :\r\n                            <Area type='monotone' dataKey=\"xc40\" stroke=\"#D9CCDF\" fill=\"#D9CCDF\"/>}\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default AreaGraphCard;\r\n"]},"metadata":{},"sourceType":"module"}