{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\UCB\\\\courses\\\\2020Fall\\\\IEOR 135\\\\volvo_social_media\\\\full_stack_server\\\\templates\\\\src\\\\components\\\\AreaGraphCard.jsx\";\nimport React, { Component } from 'react';\nimport '../assets/css/Dashboard.css';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Label } from 'recharts';\nimport { Form } from 'react-bootstrap';\n\nclass AreaGraphCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = event => {\n      var models = this.state.models;\n      const target = event.target;\n      const checked = target.checked;\n      const name = target.name;\n      models[name] = checked;\n      this.setState({\n        models: models\n      });\n    };\n\n    this.state = {\n      models: {\n        \"s60\": true,\n        \"xc90\": false,\n        \"xc40\": false\n      }\n    };\n  }\n\n  render() {\n    const {\n      graphData,\n      type,\n      isModel\n    } = this.props;\n    const {\n      models\n    } = this.state;\n\n    const selectModel = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"model-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            id: \"checkbox\",\n            label: \"s60\",\n            name: \"s60\",\n            className: \"model-form-checkbox\",\n            checked: models[\"s60\"],\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            id: \"checkbox\",\n            label: \"xc90\",\n            name: \"xc90\",\n            className: \"model-form-checkbox\",\n            checked: models[\"xc90\"],\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            id: \"checkbox\",\n            label: \"xc40\",\n            name: \"xc40\",\n            className: \"model-form-checkbox\",\n            checked: models[\"xc40\"],\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-big-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-title\",\n        children: [type, selectModel()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: 310,\n        height: \"75%\",\n        className: \"area-chart-container\",\n        children: /*#__PURE__*/_jsxDEV(AreaChart, {\n          data: graphData,\n          margin: {\n            top: 5,\n            bottom: 5,\n            left: -30,\n            right: -30\n          },\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"key\",\n            interval: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 12\n          }, this), !models[\"s60\"] ? null : /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"s60\",\n            stroke: \"#A6CEE3\",\n            fill: \"#A6CEE3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 38\n          }, this), !models[\"xc90\"] ? null : /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"xc90\",\n            stroke: \"#A7E1AD\",\n            fill: \"#A7E1AD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 39\n          }, this), !models[\"xc40\"] ? null : /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"xc40\",\n            stroke: \"#D9CCDF\",\n            fill: \"#D9CCDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AreaGraphCard;","map":{"version":3,"sources":["E:/UCB/courses/2020Fall/IEOR 135/volvo_social_media/full_stack_server/templates/src/components/AreaGraphCard.jsx"],"names":["React","Component","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Label","Form","AreaGraphCard","constructor","props","toggle","event","models","state","target","checked","name","setState","render","graphData","type","isModel","selectModel","e","top","bottom","left","right"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport '../assets/css/Dashboard.css';\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Label,\r\n} from 'recharts';\r\nimport { Form } from 'react-bootstrap';\r\n\r\n\r\nclass AreaGraphCard extends Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      models: {\r\n        \"s60\": true,\r\n        \"xc90\": false,\r\n        \"xc40\": false\r\n      }\r\n    }\r\n  }\r\n\r\n  toggle = (event) => {\r\n    var models = this.state.models;\r\n    const target = event.target\r\n    const checked = target.checked\r\n    const name = target.name\r\n    models[name] = checked;\r\n    this.setState({\r\n      models: models,\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { graphData, type, isModel } = this.props;\r\n    const { models } = this.state;\r\n\r\n    const selectModel = () => {\r\n      return (\r\n        <div className=\"model-form\">\r\n        <Form >\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"checkbox\"\r\n            label=\"s60\"\r\n            name=\"s60\"\r\n            className=\"model-form-checkbox\"\r\n            checked={models[\"s60\"]}\r\n            onChange={e => this.toggle(e)}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"checkbox\"\r\n            label=\"xc90\"\r\n            name=\"xc90\"\r\n            className=\"model-form-checkbox\"\r\n            checked={models[\"xc90\"]}\r\n            onChange={e => this.toggle(e)}\r\n          />\r\n          <Form.Check\r\n            type=\"checkbox\"\r\n            id=\"checkbox\"\r\n            label=\"xc40\"\r\n            name=\"xc40\"\r\n            className=\"model-form-checkbox\"\r\n            checked={models[\"xc40\"]}\r\n            onChange={e => this.toggle(e)}\r\n          />\r\n        </Form>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"card-big-container\">\r\n        <div className=\"card-title\">\r\n          {type}\r\n          {selectModel()}\r\n        </div>\r\n        <ResponsiveContainer width={310} height=\"75%\" className=\"area-chart-container\">\r\n          <AreaChart data={graphData} margin={{top: 5, bottom: 5, left: -30, right: -30}}>\r\n           <XAxis dataKey=\"key\" interval={0}/>\r\n           <YAxis/>\r\n           <Tooltip/>\r\n           {!models[\"s60\"] ? null :  <Area type='monotone' dataKey=\"s60\" stroke=\"#A6CEE3\" fill=\"#A6CEE3\" />}\r\n           {!models[\"xc90\"] ? null :  <Area type='monotone' dataKey=\"xc90\" stroke=\"#A7E1AD\" fill=\"#A7E1AD\" />}\r\n           {!models[\"xc40\"] ? null :  <Area type='monotone' dataKey=\"xc40\" stroke=\"#D9CCDF\" fill=\"#D9CCDF\" />}\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n\r\n      </div>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default AreaGraphCard;\r\n"]},"metadata":{},"sourceType":"module"}