{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\UCB\\\\courses\\\\2020Fall\\\\IEOR 135\\\\volvo_social_media\\\\full_stack_server\\\\templates\\\\src\\\\components\\\\TweetsCard.jsx\";\nimport React, { Component } from 'react';\nimport '../assets/css/Dashboard.css';\nimport profilePic from '../assets/img/profile.png';\nimport { Form } from 'react-bootstrap';\n\nclass TweetsCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = event => {\n      var mode = this.state.mode;\n      const target = event.target;\n      const checked = target.checked;\n      const value = target.value;\n      this.setState({\n        mode: value\n      });\n    };\n\n    this.state = {\n      mode: \"top_like_twitters\"\n    };\n  }\n\n  render() {\n    const {\n      tweets,\n      type\n    } = this.props;\n    const {\n      mode\n    } = this.state;\n\n    const selectMode = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mode-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Top Liked\",\n            name: \"top_like_twitters\",\n            value: \"top_like_twitters\",\n            className: \"mode-form-checkbox\",\n            checked: mode == \"top_like_twitters\",\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Top Retweeted\",\n            name: \"top_retweet_twitters\",\n            value: \"top_retweet_twitters\",\n            className: \"mode-form-checkbox\",\n            checked: mode == \"top_retweet_twitters\",\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Most Recent\",\n            name: \"recent_twitters\",\n            value: \"recent_twitters\",\n            className: \"mode-form-checkbox\",\n            checked: mode == \"recent_twitters\",\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Most Influential\",\n            name: \"top_influence_twitters\",\n            value: \"top_influence_twitters\",\n            className: \"mode-form-checkbox\",\n            checked: mode == \"top_influence_twitters\",\n            onChange: e => this.toggle(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !tweets[mode] ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweets-card-big-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweets-card-title\",\n          children: [type, selectMode()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweets-card-container\",\n          children: tweets[mode].map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweets-entry\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: profilePic,\n              className: \"tweets-pic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweets-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweets-author\",\n                children: [\" \", item.author, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\" \", item.content, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TweetsCard;","map":{"version":3,"sources":["E:/UCB/courses/2020Fall/IEOR 135/volvo_social_media/full_stack_server/templates/src/components/TweetsCard.jsx"],"names":["React","Component","profilePic","Form","TweetsCard","constructor","props","toggle","event","mode","state","target","checked","value","setState","render","tweets","type","selectMode","e","map","item","author","content"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../assets/css/Dashboard.css';\r\n\r\nimport profilePic from '../assets/img/profile.png'\r\nimport {Form} from 'react-bootstrap';\r\n\r\n\r\nclass TweetsCard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mode: \"top_like_twitters\",\r\n        }\r\n    }\r\n\r\n    toggle = (event) => {\r\n        var mode = this.state.mode;\r\n        const target = event.target;\r\n        const checked = target.checked;\r\n        const value = target.value;\r\n        this.setState({\r\n            mode: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {tweets, type} = this.props;\r\n        const {mode} = this.state;\r\n\r\n        const selectMode = () => {\r\n            return (\r\n                <div className=\"mode-form\">\r\n                    <Form>\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Top Liked\"\r\n                            name=\"top_like_twitters\"\r\n                            value=\"top_like_twitters\"\r\n                            className=\"mode-form-checkbox\"\r\n                            checked={mode == \"top_like_twitters\"}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Top Retweeted\"\r\n                            name=\"top_retweet_twitters\"\r\n                            value=\"top_retweet_twitters\"\r\n                            className=\"mode-form-checkbox\"\r\n                            checked={mode == \"top_retweet_twitters\"}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Most Recent\"\r\n                            name=\"recent_twitters\"\r\n                            value=\"recent_twitters\"\r\n                            className=\"mode-form-checkbox\"\r\n                            checked={mode == \"recent_twitters\"}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Most Influential\"\r\n                            name=\"top_influence_twitters\"\r\n                            value=\"top_influence_twitters\"\r\n                            className=\"mode-form-checkbox\"\r\n                            checked={mode == \"top_influence_twitters\"}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {!tweets[mode] ? null :\r\n                    <div className=\"tweets-card-big-container\">\r\n                        <div className=\"tweets-card-title\">\r\n                            {type}\r\n                            {selectMode()}\r\n                        </div>\r\n                        <div className=\"tweets-card-container\">\r\n                            {tweets[mode].map(item =>\r\n                                <div className=\"tweets-entry\">\r\n                                    <img src={profilePic} className=\"tweets-pic\"/>\r\n                                    <div className=\"tweets-text\">\r\n                                        <div className=\"tweets-author\"> {item.author} </div>\r\n                                        <div> {item.content} </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default TweetsCard;\r\n"]},"metadata":{},"sourceType":"module"}