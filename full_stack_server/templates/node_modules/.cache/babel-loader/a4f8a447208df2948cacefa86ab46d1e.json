{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\UCB\\\\courses\\\\2020Fall\\\\IEOR 135\\\\volvo_social_media\\\\full_stack_server\\\\templates\\\\src\\\\views\\\\MentionStatistics.jsx\";\nimport React, { Component } from 'react';\nimport PieGraphCard from '../components/PieGraphCard.jsx';\nimport LineGraphCard from '../components/LineGraphCard.jsx';\nimport AreaGraphCard from '../components/AreaGraphCard.jsx';\nimport TweetsCard from '../components/TweetsCard.jsx';\nimport WordCloudCard from '../components/WordCloudCard.jsx';\nimport axios from 'axios';\n\nclass MentionStatistics extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getData();\n    };\n\n    this.getData = () => {\n      const url = \"http://127.0.0.1:8000/api/mention\";\n      axios.get(url).then(res => {\n        console.log(res.data);\n        this.setState({\n          data: res.data\n        });\n      }, error => console.log('An error occurred.', error));\n    };\n\n    this.state = {\n      data: {}\n    };\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    var scores = [];\n\n    if (data && data.score_dist) {\n      const score_dist = data.score_dist;\n      scores = [{\n        name: \"positive\",\n        value: score_dist[\"positive\"]\n      }, {\n        name: \"negative\",\n        value: score_dist[\"negative\"]\n      }, {\n        name: \"neutral\",\n        value: score_dist[\"neutral\"]\n      }];\n    }\n\n    var model_scores = [];\n\n    if (data && data.model_score_list) {\n      for (var i = 0; i <= 10; i++) {\n        model_scores.push({\n          \"key\": i * 10,\n          \"s60\": data.model_score_list[0].score_dist[i],\n          \"xc90\": data.model_score_list[2].score_dist[i],\n          \"xc40\": data.model_score_list[4].score_dist[i]\n        });\n      }\n    }\n\n    var twitters = {};\n\n    if (data && data.top_twitter) {\n      data.top_twitter.forEach((item, i) => {\n        if (item.type === \"recent\") {\n          twitters[\"recent_twitters\"] = item.twitters;\n        } else if (item.type === \"top_like\") {\n          twitters[\"top_like_twitters\"] = item.twitters;\n        } else if (item.type === \"top_retweet\") {\n          twitters[\"top_retweet_twitters\"] = item.twitters;\n        } else if (item.type === \"top_influence\") {\n          twitters[\"top_influence_twitters\"] = item.twitters;\n        }\n      });\n    }\n\n    var words = [];\n\n    if (data && data.word_cloud) {\n      data.word_cloud.forEach((item, i) => {\n        words.push({\n          text: item.word,\n          value: item.count\n        });\n      });\n    }\n\n    var avg_scores = [];\n\n    if (data && data.avg_score) {\n      data.avg_score.forEach((item, i) => {\n        avg_scores.push({\n          time: \"Jan\",\n          score: item\n        });\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !data ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AA-container\",\n        children: [/*#__PURE__*/_jsxDEV(AreaGraphCard, {\n          graphData: model_scores,\n          type: \"Sentiment Score for Models\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(PieGraphCard, {\n          graphData: scores,\n          type: \"Sentiment Scores Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(LineGraphCard, {\n          graphData: avg_scores,\n          type: \"Sentiment Scores over Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TweetsCard, {\n          tweets: twitters,\n          type: \"Latest Mentions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(WordCloudCard, {\n          words: words,\n          type: \"Word Cloud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MentionStatistics;","map":{"version":3,"sources":["E:/UCB/courses/2020Fall/IEOR 135/volvo_social_media/full_stack_server/templates/src/views/MentionStatistics.jsx"],"names":["React","Component","PieGraphCard","LineGraphCard","AreaGraphCard","TweetsCard","WordCloudCard","axios","MentionStatistics","constructor","props","componentDidMount","getData","url","get","then","res","console","log","data","setState","error","state","render","scores","score_dist","name","value","model_scores","model_score_list","i","push","twitters","top_twitter","forEach","item","type","words","word_cloud","text","word","count","avg_scores","avg_score","time","score"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PieGraphCard from '../components/PieGraphCard.jsx';\r\nimport LineGraphCard from '../components/LineGraphCard.jsx';\r\nimport AreaGraphCard from '../components/AreaGraphCard.jsx';\r\nimport TweetsCard from '../components/TweetsCard.jsx';\r\nimport WordCloudCard from '../components/WordCloudCard.jsx';\r\nimport axios from 'axios';\r\n\r\n\r\nclass MentionStatistics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {}\r\n        }\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        const url = \"http://127.0.0.1:8000/api/mention\";\r\n        axios.get(url)\r\n            .then(res => {\r\n                    console.log(res.data);\r\n                    this.setState({\r\n                        data: res.data\r\n                    })\r\n                },\r\n                error => console.log('An error occurred.', error),\r\n            );\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        var scores = [];\r\n        if (data && data.score_dist) {\r\n            const score_dist = data.score_dist;\r\n            scores = [\r\n                {name: \"positive\", value: score_dist[\"positive\"]},\r\n                {name: \"negative\", value: score_dist[\"negative\"]},\r\n                {name: \"neutral\", value: score_dist[\"neutral\"]},\r\n            ]\r\n        }\r\n        var model_scores = [];\r\n        if (data && data.model_score_list) {\r\n            for (var i = 0; i <= 10; i++) {\r\n                model_scores.push({\r\n                    \"key\": i * 10,\r\n                    \"s60\": data.model_score_list[0].score_dist[i],\r\n                    \"xc90\": data.model_score_list[2].score_dist[i],\r\n                    \"xc40\": data.model_score_list[4].score_dist[i],\r\n                })\r\n            }\r\n        }\r\n\r\n        var twitters = {};\r\n        if (data && data.top_twitter) {\r\n            data.top_twitter.forEach((item, i) => {\r\n                if (item.type === \"recent\") {\r\n                    twitters[\"recent_twitters\"] = item.twitters;\r\n                } else if (item.type === \"top_like\") {\r\n                    twitters[\"top_like_twitters\"] = item.twitters;\r\n                } else if (item.type === \"top_retweet\") {\r\n                    twitters[\"top_retweet_twitters\"] = item.twitters;\r\n                } else if (item.type === \"top_influence\") {\r\n                    twitters[\"top_influence_twitters\"] = item.twitters;\r\n                }\r\n            });\r\n        }\r\n\r\n        var words = [];\r\n        if (data && data.word_cloud) {\r\n            data.word_cloud.forEach((item, i) => {\r\n                words.push({\r\n                    text: item.word,\r\n                    value: item.count,\r\n                })\r\n            });\r\n\r\n        }\r\n\r\n        var avg_scores = [];\r\n        if (data && data.avg_score) {\r\n            data.avg_score.forEach((item, i) => {\r\n                avg_scores.push({\r\n                    time: \"Jan\",\r\n                    score: item\r\n                })\r\n            });\r\n\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                {!data ? null :\r\n                    <div className=\"AA-container\">\r\n                        <AreaGraphCard graphData={model_scores} type=\"Sentiment Score for Models\"/>\r\n                        <PieGraphCard graphData={scores} type=\"Sentiment Scores Distribution\"/>\r\n                        <LineGraphCard graphData={avg_scores} type=\"Sentiment Scores over Time\"/>\r\n                        <TweetsCard tweets={twitters} type=\"Latest Mentions\"/>\r\n                        <WordCloudCard words={words} type=\"Word Cloud\"/>\r\n                    </div>}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default MentionStatistics;\r\n"]},"metadata":{},"sourceType":"module"}