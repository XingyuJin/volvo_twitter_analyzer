[{"E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\reportWebVitals.js":"1","E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\AreaGraphCard.jsx":"2","E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\LineGraphCard.jsx":"3","E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\views\\AccountAnalytics.jsx":"4","E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\views\\MentionStatistics.jsx":"5","E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\TweetsCard.jsx":"6","E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\WordCloudCard.jsx":"7","E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\BarGraphCard.jsx":"8","E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\SummaryCard.jsx":"9","E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\Dashboard.js":"10","E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\index.js":"11","E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\PieGraphCard.jsx":"12"},{"size":415,"mtime":1607290214150,"results":"13","hashOfConfig":"14"},{"size":3449,"mtime":1607290072183,"results":"15","hashOfConfig":"14"},{"size":1358,"mtime":1607290114240,"results":"16","hashOfConfig":"14"},{"size":4068,"mtime":1607364442759,"results":"17","hashOfConfig":"14"},{"size":3776,"mtime":1607290163341,"results":"18","hashOfConfig":"14"},{"size":3808,"mtime":1607290158636,"results":"19","hashOfConfig":"14"},{"size":941,"mtime":1607290056488,"results":"20","hashOfConfig":"14"},{"size":1216,"mtime":1607292364345,"results":"21","hashOfConfig":"14"},{"size":1245,"mtime":1607290137312,"results":"22","hashOfConfig":"14"},{"size":1841,"mtime":1607290197299,"results":"23","hashOfConfig":"14"},{"size":650,"mtime":1607290204837,"results":"24","hashOfConfig":"14"},{"size":894,"mtime":1607290114222,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4wtheb",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\reportWebVitals.js",[],"E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\AreaGraphCard.jsx",["57"],"import React, {Component} from 'react';\r\nimport '../assets/css/Dashboard.css';\r\nimport {Area, AreaChart, ResponsiveContainer, Tooltip, XAxis, YAxis,} from 'recharts';\r\nimport {Form} from 'react-bootstrap';\r\n\r\n\r\nclass AreaGraphCard extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            models: {\r\n                \"s60\": true,\r\n                \"xc90\": false,\r\n                \"xc40\": false\r\n            }\r\n        }\r\n    }\r\n\r\n    toggle = (event) => {\r\n        var models = this.state.models;\r\n        const target = event.target\r\n        const checked = target.checked\r\n        const name = target.name\r\n        models[name] = checked;\r\n        this.setState({\r\n            models: models,\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {graphData, type, isModel} = this.props;\r\n        const {models} = this.state;\r\n\r\n        const selectModel = () => {\r\n            return (\r\n                <div className=\"model-form\">\r\n                    <Form>\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox\"\r\n                            label=\"s60\"\r\n                            name=\"s60\"\r\n                            className=\"model-form-checkbox\"\r\n                            checked={models[\"s60\"]}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox\"\r\n                            label=\"xc90\"\r\n                            name=\"xc90\"\r\n                            className=\"model-form-checkbox\"\r\n                            checked={models[\"xc90\"]}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            id=\"checkbox\"\r\n                            label=\"xc40\"\r\n                            name=\"xc40\"\r\n                            className=\"model-form-checkbox\"\r\n                            checked={models[\"xc40\"]}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"card-big-container\">\r\n                <div className=\"card-title\">\r\n                    {type}\r\n                    {selectModel()}\r\n                </div>\r\n                <ResponsiveContainer width={310} height=\"75%\" className=\"area-chart-container\">\r\n                    <AreaChart data={graphData} margin={{top: 5, bottom: 5, left: -30}}>\r\n                        <XAxis dataKey=\"key\" interval={0} padding={{right: 10}}/>\r\n                        <YAxis/>\r\n                        <Tooltip/>\r\n                        {!models[\"s60\"] ? null : <Area type='monotone' dataKey=\"s60\" stroke=\"#A6CEE3\" fill=\"#A6CEE3\"/>}\r\n                        {!models[\"xc90\"] ? null :\r\n                            <Area type='monotone' dataKey=\"xc90\" stroke=\"#A7E1AD\" fill=\"#A7E1AD\"/>}\r\n                        {!models[\"xc40\"] ? null :\r\n                            <Area type='monotone' dataKey=\"xc40\" stroke=\"#D9CCDF\" fill=\"#D9CCDF\"/>}\r\n                    </AreaChart>\r\n                </ResponsiveContainer>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default AreaGraphCard;\r\n",["58","59"],"E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\LineGraphCard.jsx",["60"],"import React, {PureComponent} from 'react';\r\nimport '../assets/css/Dashboard.css';\r\nimport {Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis,} from 'recharts';\r\n\r\n\r\nclass LineGraphCard extends PureComponent {\r\n\r\n    render() {\r\n\r\n        const {graphData, type} = this.props;\r\n\r\n        return (\r\n\r\n            <div className=\"card-big-container\">\r\n                <div className=\"card-title\"> {type}</div>\r\n                <ResponsiveContainer width={310} height=\"75%\" className=\"line-chart-container\">\r\n                    <LineChart data={graphData} margin={{top: 5, bottom: 5, left: -30}}>\r\n                        <XAxis tick={false}/>\r\n                        <YAxis/>\r\n                        <Line type=\"monotone\" dataKey=\"score\" stroke=\"#A6CEE3\" strokeWidth={2} dot={false}/>\r\n                        <Tooltip labelFormatter={label => `Day ${label}`}/>\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nclass CustomizedAxisTick extends PureComponent {\r\n    render() {\r\n        const values = [\"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\"];\r\n        return (\r\n            <g>\r\n                <text x={-20} y={0} dy={0} dx={0} textAnchor=\"end\" fill=\"#666\" transform=\"rotate(-35)\">{values}</text>\r\n            </g>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default LineGraphCard;\r\n",["61","62"],"E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\views\\AccountAnalytics.jsx",["63","64","65","66","67"],"E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\views\\MentionStatistics.jsx",[],"E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\TweetsCard.jsx",["68","69","70","71","72","73","74"],"import React, {Component} from 'react';\r\nimport '../assets/css/Dashboard.css';\r\n\r\nimport profilePic from '../assets/img/profile.png'\r\nimport {Form} from 'react-bootstrap';\r\n\r\n\r\nclass TweetsCard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mode: \"top_like_twitters\",\r\n        }\r\n    }\r\n\r\n    toggle = (event) => {\r\n        var mode = this.state.mode;\r\n        const target = event.target;\r\n        const checked = target.checked;\r\n        const value = target.value;\r\n        this.setState({\r\n            mode: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {tweets, type} = this.props;\r\n        const {mode} = this.state;\r\n\r\n        const selectMode = () => {\r\n            return (\r\n                <div className=\"mode-form\">\r\n                    <Form>\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Top Liked\"\r\n                            name=\"top_like_twitters\"\r\n                            value=\"top_like_twitters\"\r\n                            className=\"mode-form-checkbox\"\r\n                            checked={mode == \"top_like_twitters\"}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Top Retweeted\"\r\n                            name=\"top_retweet_twitters\"\r\n                            value=\"top_retweet_twitters\"\r\n                            className=\"mode-form-checkbox\"\r\n                            checked={mode == \"top_retweet_twitters\"}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Most Recent\"\r\n                            name=\"recent_twitters\"\r\n                            value=\"recent_twitters\"\r\n                            className=\"mode-form-checkbox\"\r\n                            checked={mode == \"recent_twitters\"}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Most Influential\"\r\n                            name=\"top_influence_twitters\"\r\n                            value=\"top_influence_twitters\"\r\n                            className=\"mode-form-checkbox\"\r\n                            checked={mode == \"top_influence_twitters\"}\r\n                            onChange={e => this.toggle(e)}\r\n                        />\r\n                    </Form>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {!tweets[mode] ? null :\r\n                    <div className=\"tweets-card-big-container\">\r\n                        <div className=\"tweets-card-title\">\r\n                            {type}\r\n                            {selectMode()}\r\n                        </div>\r\n                        <div className=\"tweets-card-container\">\r\n                            {tweets[mode].map(item =>\r\n                                <div className=\"tweets-entry\">\r\n                                    <img src={profilePic} className=\"tweets-pic\"/>\r\n                                    <div className=\"tweets-text\">\r\n                                        <div className=\"tweets-author\"> {item.author} </div>\r\n                                        <div> {item.content} </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default TweetsCard;\r\n","E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\WordCloudCard.jsx",["75"],"import React, {PureComponent} from 'react';\r\nimport '../assets/css/Dashboard.css';\r\nimport ReactWordcloud from \"react-wordcloud\";\r\n\r\nclass WordCloudCard extends PureComponent {\r\n\r\n\r\n    render() {\r\n\r\n        const {words, type} = this.props;\r\n        const options = {\r\n            rotations: 2,\r\n            rotationAngles: [-90, 0],\r\n        };\r\n        const callbacks = {\r\n            getWordTooltip: () => console.log(),\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {!words ? null :\r\n                    <div className=\"card-big-container\">\r\n                        <div className=\"card-title\"> {type}</div>\r\n                        <div className=\"wordcloud-container\">\r\n                            <ReactWordcloud className=\"wordcloud\" callbacks={callbacks} words={words}/>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default WordCloudCard;\r\n","E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\BarGraphCard.jsx",[],"E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\SummaryCard.jsx",[],"E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\Dashboard.js",[],["76","77"],"E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\index.js",[],"E:\\UCB\\courses\\2020Fall\\IEOR 135\\volvo_social_media\\full_stack_server\\templates\\src\\components\\PieGraphCard.jsx",[],{"ruleId":"78","severity":1,"message":"79","line":34,"column":33,"nodeType":"80","messageId":"81","endLine":34,"endColumn":40},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"78","severity":1,"message":"86","line":31,"column":7,"nodeType":"80","messageId":"81","endLine":31,"endColumn":25},{"ruleId":"82","replacedBy":"87"},{"ruleId":"84","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":48,"column":44,"nodeType":"91","messageId":"92","endLine":48,"endColumn":46},{"ruleId":"93","severity":1,"message":"94","line":66,"column":39,"nodeType":"95","messageId":"96","endLine":66,"endColumn":41},{"ruleId":"93","severity":1,"message":"94","line":76,"column":39,"nodeType":"95","messageId":"96","endLine":76,"endColumn":41},{"ruleId":"93","severity":1,"message":"94","line":86,"column":39,"nodeType":"95","messageId":"96","endLine":86,"endColumn":41},{"ruleId":"93","severity":1,"message":"94","line":96,"column":39,"nodeType":"95","messageId":"96","endLine":96,"endColumn":41},{"ruleId":"78","severity":1,"message":"97","line":18,"column":13,"nodeType":"80","messageId":"81","endLine":18,"endColumn":17},{"ruleId":"78","severity":1,"message":"98","line":20,"column":15,"nodeType":"80","messageId":"81","endLine":20,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":42,"column":43,"nodeType":"95","messageId":"96","endLine":42,"endColumn":45},{"ruleId":"93","severity":1,"message":"94","line":51,"column":43,"nodeType":"95","messageId":"96","endLine":51,"endColumn":45},{"ruleId":"93","severity":1,"message":"94","line":60,"column":43,"nodeType":"95","messageId":"96","endLine":60,"endColumn":45},{"ruleId":"93","severity":1,"message":"94","line":69,"column":43,"nodeType":"95","messageId":"96","endLine":69,"endColumn":45},{"ruleId":"99","severity":1,"message":"100","line":88,"column":37,"nodeType":"101","endLine":88,"endColumn":83},{"ruleId":"78","severity":1,"message":"102","line":11,"column":15,"nodeType":"80","messageId":"81","endLine":11,"endColumn":22},{"ruleId":"82","replacedBy":"103"},{"ruleId":"84","replacedBy":"104"},"no-unused-vars","'isModel' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"'CustomizedAxisTick' is defined but never used.",["105"],["106"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'mode' is assigned a value but never used.","'checked' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'options' is assigned a value but never used.",["105"],["106"],"no-global-assign","no-unsafe-negation"]